# github repository Actions 페이지에 나타낼 이름
name: ACC-hotsix CI/CD

# event trigger
on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      ## jdk setting
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        
      ## gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: 
          chmod +x gradlew

      ## create application-prod.yml
      - name: create application.yml
        run: |
          cd ./src/main
          cd ./resources
          touch ./application.yml
          ls *
          echo "${{ secrets.APPLICATION_YML }}" > ./application.yml

      - name: Build with Gradle
        run: ./gradlew build -x test

      ## docker build & push to production
      - name: Build Docker image
        run: docker build --tag acchotsix/acc-hotsix:latest .

      - name: Log in to DockerHub
        uses: docker/login-action@v3.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image to DockerHub
        run: docker push acchotsix/acc-hotsix:latest

      - name: Make zip file
        run: zip -r ./hotsix.zip .

      ## deploy to production
      - name: Configure AWS IAM credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./hotsix.zip s3://acc6-s3-dev-an2/hotsix.zip #버킷에 업로드.

      - name: Start CodeDeploy Agent
        run: >
          aws deploy create-deployment --application-name hotsix
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name deploy-group
          --s3-location bucket=acc6-s3-dev-an2,bundleType=zip,key=hotsix.zip
